<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Farm Predictions</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<body>

    <header class="bg-dark text-white text-center py-3">
        <div class="container">
            <h1>Terimbere</h1>
            <nav class="nav justify-content-center">
                <a class="nav-link text-white" href="/home">Home</a>
                <a class="nav-link text-white" href="/about">About</a>
                <div class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" href="#" id="servicesDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Services
                    </a>
                    <div class="dropdown-menu" aria-labelledby="servicesDropdown">
                        <a class="dropdown-item" href="/market">Market</a>
                        <a class="dropdown-item" href="/botanists">Botanists</a>
                        <a class="dropdown-item" href="/predictions">Predictions</a>
                    </div>
                </div>
                <a class="nav-link text-white" href="/login">Login</a>
                <a class="nav-link text-white" href="/signup">Signup</a>
            </nav>
        </div>
    </header>

    <div class="container mt-5" style="max-width: 600px;">
        <h1 class="text-center">Predict the Best Crop to Plant</h1>
        <form id="crop-prediction-form" action="api/predict-crop" method="POST">
            <div class="form-group">
                <label for="province">Province</label>
                <input type="text" class="form-control" id="province" name="province" placeholder="Enter Province Name" required>
            </div>
            <div class="form-group">
                <label for="district">District</label>
                <input type="text" class="form-control" id="district" name="district" placeholder="Enter District Name" required>
            </div>
            <div class="form-group">
                <label for="month">Month</label>
                <input type="text" class="form-control" id="month" name="month" placeholder="Enter Month Name" required>
            </div>
            <div class="form-group">
                <label for="soil-type">Soil Type</label>
                <input type="text" class="form-control" id="soil-type" name="soil_type" placeholder="Enter Soil Type" required>
            </div>
            <div class="form-group">
                <label for="rainfall">Rainfall (mm)</label>
                <input type="number" class="form-control" id="rainfall" name="rainfall" placeholder="Enter Annual Rainfall" required>
            </div>
            <div class="form-group">
                <label for="temperature">Temperature (Â°C)</label>
                <input type="number" class="form-control" id="temperature" name="temperature" placeholder="Enter Average Temperature" required>
            </div>
            <button type="submit" class="btn btn-primary">Predict</button>
        </form>
        <div id="crop-prediction-result" class="mt-4 d-none">
            <h2>Prediction Result</h2>
            <p id="crop-prediction-output"></p>
        </div>
    </div>

    <footer class="bg-dark text-white text-center py-3 mt-5">
        <p>&copy; 2024 Terimbere. All rights reserved.</p>
    </footer>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            document.querySelector('#crop-prediction-form').addEventListener('submit', function(event) {
                event.preventDefault();
                
                const resultId = this.id.replace('-form', '-result');
                const outputId = this.id.replace('-form', '-output');
                const formData = new FormData(this);
                console.log(formData);
                const data = {};
                formData.forEach((value, key) => {
                    data[key] = value;
                });
                console.log(data);
                fetch(this.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                    document.getElementById(resultId).classList.remove('d-none');
                    document.getElementById(outputId).innerText = data.result;
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById(resultId).classList.remove('d-none');
                    document.getElementById(outputId).innerText = 'An error occurred. Please try again.';
                });
            });

            document.querySelector('.dropdown-toggle').addEventListener('click', function(event) {
                event.preventDefault();
                var dropdownMenu = this.nextElementSibling;
                dropdownMenu.style.display = dropdownMenu.style.display === 'block' ? 'none' : 'block';
            });
        });
    </script>
</body>
</html>
